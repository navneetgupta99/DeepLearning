# GRADED FUNCTION: layer_sizes

def layer_sizes(X, Y):
    """
    Arguments:
    X -- input dataset of shape (input size, number of examples)
    Y -- labels of shape (output size, number of examples)
    
    Returns:
    n_x -- the size of the input layer
    n_h -- the size of the hidden layer
    n_y -- the size of the output layer
    """
    ### START CODE HERE ### (â‰ˆ 3 lines of code)
    n_x = None # size of input layer
    x_shape = np.shape(X)
    n_x = x_shape[0]
    n_h = None
    n_h = 4
    y_shape = np.shape(Y)
    n_y = None # size of output layer
    n_y = y_shape[0]
    ### END CODE HERE ###
    return (n_x, n_h, n_y)
